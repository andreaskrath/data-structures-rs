name: Continous Integration

on:
  pull_request:
    branches: [ "develop" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Cache 
        uses: Swatinem/rust-cache@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run cargo release build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Cache 
        uses: Swatinem/rust-cache@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Cache 
        uses: Swatinem/rust-cache@v2
      - name: Install stable toolchain with clippy available
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -W clippy::all -D warnings # this turns warnings into errors

  rustfmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain with rustfmt available
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  grcov:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
      - uses: actions/checkout@v3
      - name: Install nightly toolchain as its required for code coverage to work
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Cleans build artifacts from earlier builds
      - uses: actions-rs/cargo@v1
        with: 
          command: clean
      - name: Runs test suite
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
      - name: Sets required environment variables for code generation to work
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
